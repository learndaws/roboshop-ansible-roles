- name: PLAY-1 TASK-1 disable nodejs default version
  command: dnf module disable nodejs -y

- name: PLAY-1 TASK-2 enable nodejs:18
  command: dnf module enable nodejs:18 -y

- name: PLAY-1 TASK-3 nodejs:18 Installation
  ansible.builtin.package:
    name: nodejs
    state: present

- name: PLAY-1 TASK-4 Username Creation
  ansible.builtin.user:
    name: roboshop

- name: PLAY-1 TASK-5 Directory Creation
  ansible.builtin.file:
    path: /app
    state: directory

- name: PLAY-1 TASK-6 Download application code
  ansible.builtin.get_url:
    url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
    dest: /tmp/catalogue.zip

- name: PLAY-1 TASK-7 unzip downloaded code
  ansible.builtin.unarchive:
    src: /tmp/catalogue.zip
    dest: /app
    remote_src: yes

- name: PLAY-1 TASK-8 npm installation
  community.general.npm:
    name: npm
    path: /app

- name: PLAY-1 TASK-9 setting systemd catalogue service
  ansible.builtin.copy:
    src: catalogue.service
    dest: /etc/systemd/system/catalogue.service

- name: PLAY-1 TASK-10 DAEMON RELOAD and service restart and enable
  ansible.builtin.systemd_service:
    daemon_reload: true
    name: catalogue
    enabled: yes
    state: started

- name: PLAY-1 TASK-11 Mongodb repo creation
  ansible.builtin.copy:
    src: mongo.repo
    dest: /etc/yum.repos.d/mongo.repo

- name: PLAY-1 TASK-12 Mongodb installation
  ansible.builtin.package:
    name: mongodb-org-shell
    state: present

- name: PLAY-1 TASK-13 Data load existance check
  ansible.builtin.command: mongo --host mongodb.hellodns.xyz --quiet --eval 'db = db.getSiblingDB("catalogue"); db.products.count()'
  register: load_output
  
- name: PLAY-1 TASK-14 Data load if not exists
  ansible.builtin.command: mongo --host mongodb.hellodns.xyz < /app/schema/catalogue.js
  when: load_output.stdout == "0"   #keep it in double quotes

- name: PLAY-1 TASK-15 start and enable catalogue
  ansible.builtin.service:
    name: catalogue
    state: restarted
    enabled: yes